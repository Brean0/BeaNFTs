{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256[]",
          "name": "tokenIDs",
          "type": "uint256[]"
        }
      ],
      "name": "batchTransfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "checkValidity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "TokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "mintAllBeaNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newBaseTokenURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801561001457600080fd5b50608051612ab661004c6000396000818161094c0152818161098c01528181610a7501528181610ab50152610bbf0152612ab66000f3fe6080604052600436106101c25760003560e01c806352d1902d116100f75780638da5cb5b11610095578063ba70153c11610064578063ba70153c146104d2578063c87b56dd146104f2578063e985e9c514610512578063f2fde38b1461055c57600080fd5b80638da5cb5b1461045e57806395d89b411461047d578063a22cb46514610492578063b88d4fde146104b257600080fd5b80636c0360eb116100d15780636c0360eb146103ff57806370a0823114610414578063715018a6146104345780638129fc1c1461044957600080fd5b806352d1902d146103aa57806355f804b3146103bf5780636352211e146103df57600080fd5b80632f745c591161016457806342966c681161013e57806342966c68146103375780634f1ef286146103575780634f558e791461036a5780634f6ccce71461038a57600080fd5b80632f745c59146102d75780633659cfe6146102f757806342842e0e1461031757600080fd5b8063081812fc116101a0578063081812fc14610240578063095ea7b31461027857806318160ddd1461029857806323b872dd146102b757600080fd5b806301ffc9a7146101c757806306fdde03146101fc578063073b0d361461021e575b600080fd5b3480156101d357600080fd5b506101e76101e236600461222f565b61057c565b60405190151581526020015b60405180910390f35b34801561020857600080fd5b506102116105a7565b6040516101f391906122a4565b34801561022a57600080fd5b5061023e610239366004612303565b610639565b005b34801561024c57600080fd5b5061026061025b36600461236f565b610688565b6040516001600160a01b0390911681526020016101f3565b34801561028457600080fd5b5061023e6102933660046123a4565b6106d5565b3480156102a457600080fd5b506103965b6040519081526020016101f3565b3480156102c357600080fd5b5061023e6102d23660046123ce565b6107eb565b3480156102e357600080fd5b506102a96102f23660046123a4565b61081d565b34801561030357600080fd5b5061023e61031236600461240a565b610941565b34801561032357600080fd5b5061023e6103323660046123ce565b610a21565b34801561034357600080fd5b5061023e61035236600461236f565b610a3c565b61023e6103653660046124c8565b610a6a565b34801561037657600080fd5b506101e761038536600461236f565b610b3b565b34801561039657600080fd5b506102a96103a536600461236f565b610b46565b3480156103b657600080fd5b506102a9610bb2565b3480156103cb57600080fd5b5061023e6103da366004612516565b610c65565b3480156103eb57600080fd5b506102606103fa36600461236f565b610c7a565b34801561040b57600080fd5b50610211610ceb565b34801561042057600080fd5b506102a961042f36600461240a565b610cfa565b34801561044057600080fd5b5061023e610db1565b34801561045557600080fd5b5061023e610dc5565b34801561046a57600080fd5b50610459546001600160a01b0316610260565b34801561048957600080fd5b50610211610f52565b34801561049e57600080fd5b5061023e6104ad366004612588565b610f61565b3480156104be57600080fd5b5061023e6104cd3660046125c4565b610f6b565b3480156104de57600080fd5b506101e76104ed366004612303565b610f9d565b3480156104fe57600080fd5b5061021161050d36600461236f565b61105b565b34801561051e57600080fd5b506101e761052d36600461262c565b6001600160a01b0391821660009081526103fe6020908152604080832093909416825291909152205460ff1690565b34801561056857600080fd5b5061023e61057736600461240a565b6110de565b60006001600160e01b0319821663780e9d6360e01b14806105a157506105a182611154565b92915050565b6060606580546105b69061265f565b80601f01602080910402602001604051908101604052809291908181526020018280546105e29061265f565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b5050505050905090565b61064584848484610f9d565b5060018314156106775761067233858560008181106106665761066661269a565b905060200201356111a4565b610682565b6106823385856111be565b50505050565b600061069382611353565b6106b85760405162461bcd60e51b81526004016106af906126b0565b60405180910390fd5b5060009081526103fd60205260409020546001600160a01b031690565b60006106e082610c7a565b9050806001600160a01b0316836001600160a01b0316141561074e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106af565b336001600160a01b038216148061076a575061076a813361052d565b6107dc5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016106af565b6107e6838361138a565b505050565b6107f6335b826113f9565b6108125760405162461bcd60e51b81526004016106af906126fc565b6107e68383836114e3565b600061082883610cfa565b821061088a5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016106af565b6000805b6103968110156108e15760678161039681106108ac576108ac61269a565b01546001600160a01b03868116911614156108d957838214156108d25791506105a19050565b8160010191505b60010161088e565b5060405162461bcd60e51b815260206004820152602e60248201527f455243373231456e756d657261626c654f7074696d697a65643a20696e64657860448201526d206f7574206f6620626f756e647360901b60648201526084016106af565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561098a5760405162461bcd60e51b81526004016106af9061274a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109d3600080516020612a3a833981519152546001600160a01b031690565b6001600160a01b0316146109f95760405162461bcd60e51b81526004016106af90612796565b610a028161162f565b60408051600080825260208201909252610a1e91839190611637565b50565b6107e683838360405180602001604052806000815250610f6b565b610a45336107f0565b610a615760405162461bcd60e51b81526004016106af906126fc565b610a1e816117a2565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610ab35760405162461bcd60e51b81526004016106af9061274a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610afc600080516020612a3a833981519152546001600160a01b031690565b6001600160a01b031614610b225760405162461bcd60e51b81526004016106af90612796565b610b2b8261162f565b610b3782826001611637565b5050565b60006105a182611353565b60006103968210610bae5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016106af565b5090565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c525760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106af565b50600080516020612a3a83398151915290565b610c6d611820565b6107e661048b8383612110565b6000806067836103968110610c9157610c9161269a565b01546001600160a01b03169050806105a15760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016106af565b6060610cf561187b565b905090565b60006001600160a01b038216610d645760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016106af565b6000805b610396811015610daa576067816103968110610d8657610d8661269a565b01546001600160a01b0385811691161415610da2578160010191505b600101610d68565b5092915050565b610db9611820565b610dc3600061188b565b565b600054610100900460ff1615808015610de55750600054600160ff909116105b80610dff5750303b158015610dff575060005460ff166001145b610e625760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106af565b6000805460ff191660011790558015610e85576000805461ff0019166101001790555b610ed16040518060400160405280600e81526020016d14995c1b185b9d0810995853919560921b815250604051806040016040528060048152602001631093919560e21b8152506118de565b610ed961190f565b610ee1611936565b610f0a7f473f5af92c6c71bb5ed01d4dae89d73d0503180786926bba1462b0a61d5a4b33611965565b8015610a1e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b6060606680546105b69061265f565b610b378282611992565b610f7533836113f9565b610f915760405162461bcd60e51b81526004016106af906126fc565b61068284848484611a58565b600080338686604051602001610fb59392919061280f565b60405160208183030381529060405280519060200120905061100f8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505061048c549150849050611a8b565b61104d5760405162461bcd60e51b815260206004820152600f60248201526e24b731b7b93932b1ba10383937b7b360891b60448201526064016106af565b60019150505b949350505050565b606061106682611353565b6110825760405162461bcd60e51b81526004016106af906126b0565b600061108c61187b565b905060008151116110ac57604051806020016040528060008152506110d7565b806110b684611aa1565b6040516020016110c792919061283d565b6040516020818303038152906040525b9392505050565b6110e6611820565b6001600160a01b03811661114b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106af565b610a1e8161188b565b60006001600160e01b031982166380ac58cd60e01b148061118557506001600160e01b03198216635b5e139f60e01b145b806105a157506301ffc9a760e01b6001600160e01b03198316146105a1565b610b37828260405180602001604052806000815250611b9f565b6001600160a01b0383166112145760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106af565b60005b81811015611300576112408383838181106112345761123461269a565b90506020020135611353565b1561128d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106af565b6112ac6000858585858181106112a5576112a561269a565b5050505050565b8360678484848181106112c1576112c161269a565b9050602002013561039681106112d9576112d961269a565b0180546001600160a01b0319166001600160a01b0392909216919091179055600101611217565b50818160405161131192919061286c565b604051908190038120906001600160a01b038516906000907f3593cebc8544d520ef6336197642ed70002359ed9609e9b6d698849c2bc5a412908290a4505050565b6000610396821080156105a15750600060678361039681106113775761137761269a565b01546001600160a01b0316141592915050565b60008181526103fd6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113c082610c7a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061140482611353565b6114655760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106af565b600061147083610c7a565b9050806001600160a01b0316846001600160a01b031614806114b857506001600160a01b0380821660009081526103fe602090815260408083209388168352929052205460ff165b806110535750836001600160a01b03166114d184610688565b6001600160a01b031614949350505050565b826001600160a01b03166114f682610c7a565b6001600160a01b03161461155a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016106af565b6001600160a01b0382166115bc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106af565b6115c760008261138a565b8160678261039681106115dc576115dc61269a565b0180546001600160a01b0319166001600160a01b03928316179055604051829184811691908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4505050565b610a1e611820565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561166a576107e683611bd2565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116c4575060408051601f3d908101601f191682019092526116c191810190612879565b60015b6117275760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016106af565b600080516020612a3a83398151915281146117965760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016106af565b506107e6838383611c6e565b60006117ad82610c7a565b90506117ba60008361138a565b600060678361039681106117d0576117d061269a565b0180546001600160a01b0319166001600160a01b039283161790556040518391600091908416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610459546001600160a01b03163314610dc35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106af565b606061048b80546105b69061265f565b61045980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166119055760405162461bcd60e51b81526004016106af90612892565b610b378282611c93565b600054610100900460ff16610dc35760405162461bcd60e51b81526004016106af90612892565b600054610100900460ff1661195d5760405162461bcd60e51b81526004016106af90612892565b610dc3611ce1565b600054610100900460ff1661198c5760405162461bcd60e51b81526004016106af90612892565b61048c55565b6001600160a01b0382163314156119eb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106af565b3360008181526103fe602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611a638484846114e3565b611a6f84848484611d11565b6106825760405162461bcd60e51b81526004016106af906128dd565b600082611a988584611e0c565b14949350505050565b606081611ac55750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611aef5780611ad981612945565b9150611ae89050600a83612976565b9150611ac9565b60008167ffffffffffffffff811115611b0a57611b0a612425565b6040519080825280601f01601f191660200182016040528015611b34576020820181803683370190505b5090505b841561105357611b4960018361298a565b9150611b56600a866129a1565b611b619060306129b5565b60f81b818381518110611b7657611b7661269a565b60200101906001600160f81b031916908160001a905350611b98600a86612976565b9450611b38565b611ba98383611e59565b611bb66000848484611d11565b6107e65760405162461bcd60e51b81526004016106af906128dd565b6001600160a01b0381163b611c3f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016106af565b600080516020612a3a83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611c7783611f69565b600082511180611c845750805b156107e6576106828383611fa9565b600054610100900460ff16611cba5760405162461bcd60e51b81526004016106af90612892565b8151611ccd906065906020850190612190565b5080516107e6906066906020840190612190565b600054610100900460ff16611d085760405162461bcd60e51b81526004016106af90612892565b610dc33361188b565b60006001600160a01b0384163b15611e0457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d559033908990889088906004016129cd565b6020604051808303816000875af1925050508015611d90575060408051601f3d908101601f19168201909252611d8d91810190612a00565b60015b611dea573d808015611dbe576040519150601f19603f3d011682016040523d82523d6000602084013e611dc3565b606091505b508051611de25760405162461bcd60e51b81526004016106af906128dd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611053565b506001611053565b600081815b8451811015611e5157611e3d82868381518110611e3057611e3061269a565b6020026020010151611fce565b915080611e4981612945565b915050611e11565b509392505050565b6001600160a01b038216611eaf5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106af565b611eb881611353565b15611f055760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106af565b816067826103968110611f1a57611f1a61269a565b0180546001600160a01b0319166001600160a01b0392831617905560405182918416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611f7281611bd2565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606110d78383604051806060016040528060278152602001612a5a60279139611ffd565b6000818310611fea5760008281526020849052604090206110d7565b60008381526020839052604090206110d7565b6060600080856001600160a01b03168560405161201a9190612a1d565b600060405180830381855af49150503d8060008114612055576040519150601f19603f3d011682016040523d82523d6000602084013e61205a565b606091505b509150915061206b86838387612075565b9695505050505050565b606083156120e15782516120da576001600160a01b0385163b6120da5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106af565b5081611053565b61105383838151156120f65781518083602001fd5b8060405162461bcd60e51b81526004016106af91906122a4565b82805461211c9061265f565b90600052602060002090601f01602090048101928261213e5760008555612184565b82601f106121575782800160ff19823516178555612184565b82800160010185558215612184579182015b82811115612184578235825591602001919060010190612169565b50610bae929150612204565b82805461219c9061265f565b90600052602060002090601f0160209004810192826121be5760008555612184565b82601f106121d757805160ff1916838001178555612184565b82800160010185558215612184579182015b828111156121845782518255916020019190600101906121e9565b5b80821115610bae5760008155600101612205565b6001600160e01b031981168114610a1e57600080fd5b60006020828403121561224157600080fd5b81356110d781612219565b60005b8381101561226757818101518382015260200161224f565b838111156106825750506000910152565b6000815180845261229081602086016020860161224c565b601f01601f19169290920160200192915050565b6020815260006110d76020830184612278565b60008083601f8401126122c957600080fd5b50813567ffffffffffffffff8111156122e157600080fd5b6020830191508360208260051b85010111156122fc57600080fd5b9250929050565b6000806000806040858703121561231957600080fd5b843567ffffffffffffffff8082111561233157600080fd5b61233d888389016122b7565b9096509450602087013591508082111561235657600080fd5b50612363878288016122b7565b95989497509550505050565b60006020828403121561238157600080fd5b5035919050565b80356001600160a01b038116811461239f57600080fd5b919050565b600080604083850312156123b757600080fd5b6123c083612388565b946020939093013593505050565b6000806000606084860312156123e357600080fd5b6123ec84612388565b92506123fa60208501612388565b9150604084013590509250925092565b60006020828403121561241c57600080fd5b6110d782612388565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261244c57600080fd5b813567ffffffffffffffff8082111561246757612467612425565b604051601f8301601f19908116603f0116810190828211818310171561248f5761248f612425565b816040528381528660208588010111156124a857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156124db57600080fd5b6124e483612388565b9150602083013567ffffffffffffffff81111561250057600080fd5b61250c8582860161243b565b9150509250929050565b6000806020838503121561252957600080fd5b823567ffffffffffffffff8082111561254157600080fd5b818501915085601f83011261255557600080fd5b81358181111561256457600080fd5b86602082850101111561257657600080fd5b60209290920196919550909350505050565b6000806040838503121561259b57600080fd5b6125a483612388565b9150602083013580151581146125b957600080fd5b809150509250929050565b600080600080608085870312156125da57600080fd5b6125e385612388565b93506125f160208601612388565b925060408501359150606085013567ffffffffffffffff81111561261457600080fd5b6126208782880161243b565b91505092959194509250565b6000806040838503121561263f57600080fd5b61264883612388565b915061265660208401612388565b90509250929050565b600181811c9082168061267357607f821691505b6020821081141561269457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006001600160fb1b038311156127f857600080fd5b8260051b8083863760009401938452509192915050565b6bffffffffffffffffffffffff198460601b16815260006128346014830184866127e2565b95945050505050565b6000835161284f81846020880161224c565b83519083019061286381836020880161224c565b01949350505050565b60006110538284866127e2565b60006020828403121561288b57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006000198214156129595761295961292f565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261298557612985612960565b500490565b60008282101561299c5761299c61292f565b500390565b6000826129b0576129b0612960565b500690565b600082198211156129c8576129c861292f565b500190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061206b90830184612278565b600060208284031215612a1257600080fd5b81516110d781612219565b60008251612a2f81846020870161224c565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a0ffed098998ee9dd52f70f0f8806b8df5d7588b384e2174e2bebd3dd8a82ff164736f6c634300080a0033",
    "sourceMap": "695:2374:26:-:0;;;1088:4:16;1045:48;;695:2374:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101c25760003560e01c806352d1902d116100f75780638da5cb5b11610095578063ba70153c11610064578063ba70153c146104d2578063c87b56dd146104f2578063e985e9c514610512578063f2fde38b1461055c57600080fd5b80638da5cb5b1461045e57806395d89b411461047d578063a22cb46514610492578063b88d4fde146104b257600080fd5b80636c0360eb116100d15780636c0360eb146103ff57806370a0823114610414578063715018a6146104345780638129fc1c1461044957600080fd5b806352d1902d146103aa57806355f804b3146103bf5780636352211e146103df57600080fd5b80632f745c591161016457806342966c681161013e57806342966c68146103375780634f1ef286146103575780634f558e791461036a5780634f6ccce71461038a57600080fd5b80632f745c59146102d75780633659cfe6146102f757806342842e0e1461031757600080fd5b8063081812fc116101a0578063081812fc14610240578063095ea7b31461027857806318160ddd1461029857806323b872dd146102b757600080fd5b806301ffc9a7146101c757806306fdde03146101fc578063073b0d361461021e575b600080fd5b3480156101d357600080fd5b506101e76101e236600461222f565b61057c565b60405190151581526020015b60405180910390f35b34801561020857600080fd5b506102116105a7565b6040516101f391906122a4565b34801561022a57600080fd5b5061023e610239366004612303565b610639565b005b34801561024c57600080fd5b5061026061025b36600461236f565b610688565b6040516001600160a01b0390911681526020016101f3565b34801561028457600080fd5b5061023e6102933660046123a4565b6106d5565b3480156102a457600080fd5b506103965b6040519081526020016101f3565b3480156102c357600080fd5b5061023e6102d23660046123ce565b6107eb565b3480156102e357600080fd5b506102a96102f23660046123a4565b61081d565b34801561030357600080fd5b5061023e61031236600461240a565b610941565b34801561032357600080fd5b5061023e6103323660046123ce565b610a21565b34801561034357600080fd5b5061023e61035236600461236f565b610a3c565b61023e6103653660046124c8565b610a6a565b34801561037657600080fd5b506101e761038536600461236f565b610b3b565b34801561039657600080fd5b506102a96103a536600461236f565b610b46565b3480156103b657600080fd5b506102a9610bb2565b3480156103cb57600080fd5b5061023e6103da366004612516565b610c65565b3480156103eb57600080fd5b506102606103fa36600461236f565b610c7a565b34801561040b57600080fd5b50610211610ceb565b34801561042057600080fd5b506102a961042f36600461240a565b610cfa565b34801561044057600080fd5b5061023e610db1565b34801561045557600080fd5b5061023e610dc5565b34801561046a57600080fd5b50610459546001600160a01b0316610260565b34801561048957600080fd5b50610211610f52565b34801561049e57600080fd5b5061023e6104ad366004612588565b610f61565b3480156104be57600080fd5b5061023e6104cd3660046125c4565b610f6b565b3480156104de57600080fd5b506101e76104ed366004612303565b610f9d565b3480156104fe57600080fd5b5061021161050d36600461236f565b61105b565b34801561051e57600080fd5b506101e761052d36600461262c565b6001600160a01b0391821660009081526103fe6020908152604080832093909416825291909152205460ff1690565b34801561056857600080fd5b5061023e61057736600461240a565b6110de565b60006001600160e01b0319821663780e9d6360e01b14806105a157506105a182611154565b92915050565b6060606580546105b69061265f565b80601f01602080910402602001604051908101604052809291908181526020018280546105e29061265f565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b5050505050905090565b61064584848484610f9d565b5060018314156106775761067233858560008181106106665761066661269a565b905060200201356111a4565b610682565b6106823385856111be565b50505050565b600061069382611353565b6106b85760405162461bcd60e51b81526004016106af906126b0565b60405180910390fd5b5060009081526103fd60205260409020546001600160a01b031690565b60006106e082610c7a565b9050806001600160a01b0316836001600160a01b0316141561074e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106af565b336001600160a01b038216148061076a575061076a813361052d565b6107dc5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016106af565b6107e6838361138a565b505050565b6107f6335b826113f9565b6108125760405162461bcd60e51b81526004016106af906126fc565b6107e68383836114e3565b600061082883610cfa565b821061088a5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016106af565b6000805b6103968110156108e15760678161039681106108ac576108ac61269a565b01546001600160a01b03868116911614156108d957838214156108d25791506105a19050565b8160010191505b60010161088e565b5060405162461bcd60e51b815260206004820152602e60248201527f455243373231456e756d657261626c654f7074696d697a65643a20696e64657860448201526d206f7574206f6620626f756e647360901b60648201526084016106af565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561098a5760405162461bcd60e51b81526004016106af9061274a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109d3600080516020612a3a833981519152546001600160a01b031690565b6001600160a01b0316146109f95760405162461bcd60e51b81526004016106af90612796565b610a028161162f565b60408051600080825260208201909252610a1e91839190611637565b50565b6107e683838360405180602001604052806000815250610f6b565b610a45336107f0565b610a615760405162461bcd60e51b81526004016106af906126fc565b610a1e816117a2565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610ab35760405162461bcd60e51b81526004016106af9061274a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610afc600080516020612a3a833981519152546001600160a01b031690565b6001600160a01b031614610b225760405162461bcd60e51b81526004016106af90612796565b610b2b8261162f565b610b3782826001611637565b5050565b60006105a182611353565b60006103968210610bae5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016106af565b5090565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c525760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106af565b50600080516020612a3a83398151915290565b610c6d611820565b6107e661048b8383612110565b6000806067836103968110610c9157610c9161269a565b01546001600160a01b03169050806105a15760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016106af565b6060610cf561187b565b905090565b60006001600160a01b038216610d645760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016106af565b6000805b610396811015610daa576067816103968110610d8657610d8661269a565b01546001600160a01b0385811691161415610da2578160010191505b600101610d68565b5092915050565b610db9611820565b610dc3600061188b565b565b600054610100900460ff1615808015610de55750600054600160ff909116105b80610dff5750303b158015610dff575060005460ff166001145b610e625760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106af565b6000805460ff191660011790558015610e85576000805461ff0019166101001790555b610ed16040518060400160405280600e81526020016d14995c1b185b9d0810995853919560921b815250604051806040016040528060048152602001631093919560e21b8152506118de565b610ed961190f565b610ee1611936565b610f0a7f473f5af92c6c71bb5ed01d4dae89d73d0503180786926bba1462b0a61d5a4b33611965565b8015610a1e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b6060606680546105b69061265f565b610b378282611992565b610f7533836113f9565b610f915760405162461bcd60e51b81526004016106af906126fc565b61068284848484611a58565b600080338686604051602001610fb59392919061280f565b60405160208183030381529060405280519060200120905061100f8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505061048c549150849050611a8b565b61104d5760405162461bcd60e51b815260206004820152600f60248201526e24b731b7b93932b1ba10383937b7b360891b60448201526064016106af565b60019150505b949350505050565b606061106682611353565b6110825760405162461bcd60e51b81526004016106af906126b0565b600061108c61187b565b905060008151116110ac57604051806020016040528060008152506110d7565b806110b684611aa1565b6040516020016110c792919061283d565b6040516020818303038152906040525b9392505050565b6110e6611820565b6001600160a01b03811661114b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106af565b610a1e8161188b565b60006001600160e01b031982166380ac58cd60e01b148061118557506001600160e01b03198216635b5e139f60e01b145b806105a157506301ffc9a760e01b6001600160e01b03198316146105a1565b610b37828260405180602001604052806000815250611b9f565b6001600160a01b0383166112145760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106af565b60005b81811015611300576112408383838181106112345761123461269a565b90506020020135611353565b1561128d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106af565b6112ac6000858585858181106112a5576112a561269a565b5050505050565b8360678484848181106112c1576112c161269a565b9050602002013561039681106112d9576112d961269a565b0180546001600160a01b0319166001600160a01b0392909216919091179055600101611217565b50818160405161131192919061286c565b604051908190038120906001600160a01b038516906000907f3593cebc8544d520ef6336197642ed70002359ed9609e9b6d698849c2bc5a412908290a4505050565b6000610396821080156105a15750600060678361039681106113775761137761269a565b01546001600160a01b0316141592915050565b60008181526103fd6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113c082610c7a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061140482611353565b6114655760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106af565b600061147083610c7a565b9050806001600160a01b0316846001600160a01b031614806114b857506001600160a01b0380821660009081526103fe602090815260408083209388168352929052205460ff165b806110535750836001600160a01b03166114d184610688565b6001600160a01b031614949350505050565b826001600160a01b03166114f682610c7a565b6001600160a01b03161461155a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016106af565b6001600160a01b0382166115bc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106af565b6115c760008261138a565b8160678261039681106115dc576115dc61269a565b0180546001600160a01b0319166001600160a01b03928316179055604051829184811691908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4505050565b610a1e611820565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561166a576107e683611bd2565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116c4575060408051601f3d908101601f191682019092526116c191810190612879565b60015b6117275760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016106af565b600080516020612a3a83398151915281146117965760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016106af565b506107e6838383611c6e565b60006117ad82610c7a565b90506117ba60008361138a565b600060678361039681106117d0576117d061269a565b0180546001600160a01b0319166001600160a01b039283161790556040518391600091908416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610459546001600160a01b03163314610dc35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106af565b606061048b80546105b69061265f565b61045980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166119055760405162461bcd60e51b81526004016106af90612892565b610b378282611c93565b600054610100900460ff16610dc35760405162461bcd60e51b81526004016106af90612892565b600054610100900460ff1661195d5760405162461bcd60e51b81526004016106af90612892565b610dc3611ce1565b600054610100900460ff1661198c5760405162461bcd60e51b81526004016106af90612892565b61048c55565b6001600160a01b0382163314156119eb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106af565b3360008181526103fe602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611a638484846114e3565b611a6f84848484611d11565b6106825760405162461bcd60e51b81526004016106af906128dd565b600082611a988584611e0c565b14949350505050565b606081611ac55750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611aef5780611ad981612945565b9150611ae89050600a83612976565b9150611ac9565b60008167ffffffffffffffff811115611b0a57611b0a612425565b6040519080825280601f01601f191660200182016040528015611b34576020820181803683370190505b5090505b841561105357611b4960018361298a565b9150611b56600a866129a1565b611b619060306129b5565b60f81b818381518110611b7657611b7661269a565b60200101906001600160f81b031916908160001a905350611b98600a86612976565b9450611b38565b611ba98383611e59565b611bb66000848484611d11565b6107e65760405162461bcd60e51b81526004016106af906128dd565b6001600160a01b0381163b611c3f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016106af565b600080516020612a3a83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611c7783611f69565b600082511180611c845750805b156107e6576106828383611fa9565b600054610100900460ff16611cba5760405162461bcd60e51b81526004016106af90612892565b8151611ccd906065906020850190612190565b5080516107e6906066906020840190612190565b600054610100900460ff16611d085760405162461bcd60e51b81526004016106af90612892565b610dc33361188b565b60006001600160a01b0384163b15611e0457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d559033908990889088906004016129cd565b6020604051808303816000875af1925050508015611d90575060408051601f3d908101601f19168201909252611d8d91810190612a00565b60015b611dea573d808015611dbe576040519150601f19603f3d011682016040523d82523d6000602084013e611dc3565b606091505b508051611de25760405162461bcd60e51b81526004016106af906128dd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611053565b506001611053565b600081815b8451811015611e5157611e3d82868381518110611e3057611e3061269a565b6020026020010151611fce565b915080611e4981612945565b915050611e11565b509392505050565b6001600160a01b038216611eaf5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106af565b611eb881611353565b15611f055760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106af565b816067826103968110611f1a57611f1a61269a565b0180546001600160a01b0319166001600160a01b0392831617905560405182918416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611f7281611bd2565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606110d78383604051806060016040528060278152602001612a5a60279139611ffd565b6000818310611fea5760008281526020849052604090206110d7565b60008381526020839052604090206110d7565b6060600080856001600160a01b03168560405161201a9190612a1d565b600060405180830381855af49150503d8060008114612055576040519150601f19603f3d011682016040523d82523d6000602084013e61205a565b606091505b509150915061206b86838387612075565b9695505050505050565b606083156120e15782516120da576001600160a01b0385163b6120da5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106af565b5081611053565b61105383838151156120f65781518083602001fd5b8060405162461bcd60e51b81526004016106af91906122a4565b82805461211c9061265f565b90600052602060002090601f01602090048101928261213e5760008555612184565b82601f106121575782800160ff19823516178555612184565b82800160010185558215612184579182015b82811115612184578235825591602001919060010190612169565b50610bae929150612204565b82805461219c9061265f565b90600052602060002090601f0160209004810192826121be5760008555612184565b82601f106121d757805160ff1916838001178555612184565b82800160010185558215612184579182015b828111156121845782518255916020019190600101906121e9565b5b80821115610bae5760008155600101612205565b6001600160e01b031981168114610a1e57600080fd5b60006020828403121561224157600080fd5b81356110d781612219565b60005b8381101561226757818101518382015260200161224f565b838111156106825750506000910152565b6000815180845261229081602086016020860161224c565b601f01601f19169290920160200192915050565b6020815260006110d76020830184612278565b60008083601f8401126122c957600080fd5b50813567ffffffffffffffff8111156122e157600080fd5b6020830191508360208260051b85010111156122fc57600080fd5b9250929050565b6000806000806040858703121561231957600080fd5b843567ffffffffffffffff8082111561233157600080fd5b61233d888389016122b7565b9096509450602087013591508082111561235657600080fd5b50612363878288016122b7565b95989497509550505050565b60006020828403121561238157600080fd5b5035919050565b80356001600160a01b038116811461239f57600080fd5b919050565b600080604083850312156123b757600080fd5b6123c083612388565b946020939093013593505050565b6000806000606084860312156123e357600080fd5b6123ec84612388565b92506123fa60208501612388565b9150604084013590509250925092565b60006020828403121561241c57600080fd5b6110d782612388565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261244c57600080fd5b813567ffffffffffffffff8082111561246757612467612425565b604051601f8301601f19908116603f0116810190828211818310171561248f5761248f612425565b816040528381528660208588010111156124a857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156124db57600080fd5b6124e483612388565b9150602083013567ffffffffffffffff81111561250057600080fd5b61250c8582860161243b565b9150509250929050565b6000806020838503121561252957600080fd5b823567ffffffffffffffff8082111561254157600080fd5b818501915085601f83011261255557600080fd5b81358181111561256457600080fd5b86602082850101111561257657600080fd5b60209290920196919550909350505050565b6000806040838503121561259b57600080fd5b6125a483612388565b9150602083013580151581146125b957600080fd5b809150509250929050565b600080600080608085870312156125da57600080fd5b6125e385612388565b93506125f160208601612388565b925060408501359150606085013567ffffffffffffffff81111561261457600080fd5b6126208782880161243b565b91505092959194509250565b6000806040838503121561263f57600080fd5b61264883612388565b915061265660208401612388565b90509250929050565b600181811c9082168061267357607f821691505b6020821081141561269457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006001600160fb1b038311156127f857600080fd5b8260051b8083863760009401938452509192915050565b6bffffffffffffffffffffffff198460601b16815260006128346014830184866127e2565b95945050505050565b6000835161284f81846020880161224c565b83519083019061286381836020880161224c565b01949350505050565b60006110538284866127e2565b60006020828403121561288b57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006000198214156129595761295961292f565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261298557612985612960565b500490565b60008282101561299c5761299c61292f565b500390565b6000826129b0576129b0612960565b500690565b600082198211156129c8576129c861292f565b500190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061206b90830184612278565b600060208284031215612a1257600080fd5b81516110d781612219565b60008251612a2f81846020870161224c565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a0ffed098998ee9dd52f70f0f8806b8df5d7588b384e2174e2bebd3dd8a82ff164736f6c634300080a0033",
    "sourceMap": "695:2374:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:264:22;;;;;;;;;;-1:-1:-1;1069:264:22;;;;;:::i;:::-;;:::i;:::-;;;565:14:32;;558:22;540:41;;528:2;513:18;1069:264:22;;;;;;;;3959:98:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2141:342:26:-;;;;;;;;;;-1:-1:-1;2141:342:26;;;;;:::i;:::-;;:::i;:::-;;5547:269:24;;;;;;;;;;-1:-1:-1;5547:269:24;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2842:32:32;;;2824:51;;2812:2;2797:18;5547:269:24;2678:203:32;5059:427:24;;;;;;;;;;-1:-1:-1;5059:427:24;;;;;:::i;:::-;;:::i;1997:169:22:-;;;;;;;;;;-1:-1:-1;2145:14:22;1997:169;;;3469:25:32;;;3457:2;3442:18;1997:169:22;3323:177:32;6312:327:24;;;;;;;;;;-1:-1:-1;6312:327:24;;;;;:::i;:::-;;:::i;1412:514:22:-;;;;;;;;;;-1:-1:-1;1412:514:22;;;;;:::i;:::-;;:::i;3073:197:16:-;;;;;;;;;;-1:-1:-1;3073:197:16;;;;;:::i;:::-;;:::i;6705:179:24:-;;;;;;;;;;-1:-1:-1;6705:179:24;;;;;:::i;:::-;;:::i;1801:173:26:-;;;;;;;;;;-1:-1:-1;1801:173:26;;;;;:::i;:::-;;:::i;3519:222:16:-;;;;;;:::i;:::-;;:::i;1701:96:26:-;;;;;;;;;;-1:-1:-1;1701:96:26;;;;;:::i;:::-;;:::i;2237:202:22:-;;;;;;;;;;-1:-1:-1;2237:202:22;;;;;:::i;:::-;;:::i;2762:131:16:-;;;;;;;;;;;;;:::i;1492:116:26:-;;;;;;;;;;-1:-1:-1;1492:116:26;;;;;:::i;:::-;;:::i;3679:218:24:-;;;;;;;;;;-1:-1:-1;3679:218:24;;;;;:::i;:::-;;:::i;1612:85:26:-;;;;;;;;;;;;;:::i;3229:393:24:-;;;;;;;;;;-1:-1:-1;3229:393:24;;;;;:::i;:::-;;:::i;2071:101:0:-;;;;;;;;;;;;;:::i;889:324:26:-;;;;;;;;;;;;;:::i;1441:85:0:-;;;;;;;;;;-1:-1:-1;1513:6:0;;-1:-1:-1;;;;;1513:6:0;1441:85;;4121:102:24;;;;;;;;;;;;;:::i;5883:139::-;;;;;;;;;;-1:-1:-1;5883:139:24;;;;;:::i;:::-;;:::i;6950:315::-;;;;;;;;;;-1:-1:-1;6950:315:24;;;;;:::i;:::-;;:::i;2487:295:26:-;;;;;;;;;;-1:-1:-1;2487:295:26;;;;;:::i;:::-;;:::i;4289:379:24:-;;;;;;;;;;-1:-1:-1;4289:379:24;;;;;:::i;:::-;;:::i;6088:162::-;;;;;;;;;;-1:-1:-1;6088:162:24;;;;;:::i;:::-;-1:-1:-1;;;;;6208:25:24;;;6185:4;6208:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;6088:162;2321:198:0;;;;;;;;;;-1:-1:-1;2321:198:0;;;;;:::i;:::-;;:::i;1069:264:22:-;1202:4;-1:-1:-1;;;;;;1225:61:22;;-1:-1:-1;;;1225:61:22;;:101;;;1290:36;1314:11;1290:23;:36::i;:::-;1218:108;1069:264;-1:-1:-1;;1069:264:22:o;3959:98:24:-;4013:13;4045:5;4038:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3959:98;:::o;2141:342:26:-;2309:34;2323:7;;2331:11;;2309:13;:34::i;:::-;-1:-1:-1;2371:1:26;2353:19;;2349:129;;;2381:34;929:10:7;2404:7:26;;2412:1;2404:10;;;;;;;:::i;:::-;;;;;;;2381:9;:34::i;:::-;2349:129;;;2439:32;929:10:7;2463:7:26;;2439:10;:32::i;:::-;2141:342;;;;:::o;5547:269:24:-;5623:7;5704:16;5712:7;5704;:16::i;:::-;5695:73;;;;-1:-1:-1;;;5695:73:24;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;5785:24:24;;;;:15;:24;;;;;;-1:-1:-1;;;;;5785:24:24;;5547:269::o;5059:427::-;5139:13;5155:43;5190:7;5155:34;:43::i;:::-;5139:59;;5222:5;-1:-1:-1;;;;;5216:11:24;:2;-1:-1:-1;;;;;5216:11:24;;;5208:57;;;;-1:-1:-1;;;5208:57:24;;8353:2:32;5208:57:24;;;8335:21:32;8392:2;8372:18;;;8365:30;8431:34;8411:18;;;8404:62;-1:-1:-1;;;8482:18:32;;;8475:31;8523:19;;5208:57:24;8151:397:32;5208:57:24;929:10:7;-1:-1:-1;;;;;5297:21:24;;;;:62;;-1:-1:-1;5322:37:24;5339:5;929:10:7;6088:162:24;:::i;5322:37::-;5276:171;;;;-1:-1:-1;;;5276:171:24;;8755:2:32;5276:171:24;;;8737:21:32;8794:2;8774:18;;;8767:30;8833:34;8813:18;;;8806:62;8904:32;8884:18;;;8877:60;8954:19;;5276:171:24;8553:426:32;5276:171:24;5458:21;5467:2;5471:7;5458:8;:21::i;:::-;5129:357;5059:427;;:::o;6312:327::-;6501:41;929:10:7;6520:12:24;6534:7;6501:18;:41::i;:::-;6493:100;;;;-1:-1:-1;;;6493:100:24;;;;;;;:::i;:::-;6604:28;6614:4;6620:2;6624:7;6604:9;:28::i;1412:514:22:-;1509:15;1552:16;1562:5;1552:9;:16::i;:::-;1544:5;:24;1536:80;;;;-1:-1:-1;;;1536:80:22;;9601:2:32;1536:80:22;;;9583:21:32;9640:2;9620:18;;;9613:30;9679:34;9659:18;;;9652:62;-1:-1:-1;;;9730:18:32;;;9723:41;9781:19;;1536:80:22;9399:407:32;1536:80:22;1627:10;1651:6;1647:207;1661:14;1659:1;:16;1647:207;;;1703:7;1711:1;1703:10;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1694:19:22;;;1703:10;;1694:19;1691:125;;;1744:5;1735;:14;1732:70;;;1758:1;-1:-1:-1;1751:8:22;;-1:-1:-1;1751:8:22;1732:70;1792:7;;;;;1732:70;1839:3;;1647:207;;;-1:-1:-1;1863:56:22;;-1:-1:-1;;;1863:56:22;;10013:2:32;1863:56:22;;;9995:21:32;10052:2;10032:18;;;10025:30;10091:34;10071:18;;;10064:62;-1:-1:-1;;;10142:18:32;;;10135:44;10196:19;;1863:56:22;9811:410:32;3073:197:16;1645:4;-1:-1:-1;;;;;1654:6:16;1637:23;;;1629:80;;;;-1:-1:-1;;;1629:80:16;;;;;;;:::i;:::-;1751:6;-1:-1:-1;;;;;1727:30:16;:20;-1:-1:-1;;;;;;;;;;;1380:54:13;-1:-1:-1;;;;;1380:54:13;;1301:140;1727:20:16;-1:-1:-1;;;;;1727:30:16;;1719:87;;;;-1:-1:-1;;;1719:87:16;;;;;;;:::i;:::-;3156:36:::1;3174:17;3156;:36::i;:::-;3243:12;::::0;;3253:1:::1;3243:12:::0;;;::::1;::::0;::::1;::::0;;;3202:61:::1;::::0;3224:17;;3243:12;3202:21:::1;:61::i;:::-;3073:197:::0;:::o;6705:179:24:-;6838:39;6855:4;6861:2;6865:7;6838:39;;;;;;;;;;;;:16;:39::i;1801:173:26:-;1855:41;929:10:7;1874:12:26;850:96:7;1855:41:26;1847:100;;;;-1:-1:-1;;;1847:100:26;;;;;;;:::i;:::-;1955:14;1961:7;1955:5;:14::i;3519:222:16:-;1645:4;-1:-1:-1;;;;;1654:6:16;1637:23;;;1629:80;;;;-1:-1:-1;;;1629:80:16;;;;;;;:::i;:::-;1751:6;-1:-1:-1;;;;;1727:30:16;:20;-1:-1:-1;;;;;;;;;;;1380:54:13;-1:-1:-1;;;;;1380:54:13;;1301:140;1727:20:16;-1:-1:-1;;;;;1727:30:16;;1719:87;;;;-1:-1:-1;;;1719:87:16;;;;;;;:::i;:::-;3636:36:::1;3654:17;3636;:36::i;:::-;3682:52;3704:17;3723:4;3729;3682:21;:52::i;:::-;3519:222:::0;;:::o;1701:96:26:-;1755:4;1776:16;1784:7;1776;:16::i;2237:202:22:-;2312:7;2347:14;2339:5;:22;2331:79;;;;-1:-1:-1;;;2331:79:22;;11254:2:32;2331:79:22;;;11236:21:32;11293:2;11273:18;;;11266:30;11332:34;11312:18;;;11305:62;-1:-1:-1;;;11383:18:32;;;11376:42;11435:19;;2331:79:22;11052:408:32;2331:79:22;-1:-1:-1;2427:5:22;2237:202::o;2762:131:16:-;2840:7;2080:4;-1:-1:-1;;;;;2089:6:16;2072:23;;2064:92;;;;-1:-1:-1;;;2064:92:16;;11667:2:32;2064:92:16;;;11649:21:32;11706:2;11686:18;;;11679:30;11745:34;11725:18;;;11718:62;11816:26;11796:18;;;11789:54;11860:19;;2064:92:16;11465:420:32;2064:92:16;-1:-1:-1;;;;;;;;;;;;2762:131:16;:::o;1492:116:26:-;1334:13:0;:11;:13::i;:::-;1572:31:26::1;:13;1588:15:::0;;1572:31:::1;:::i;3679:218:24:-:0;3751:7;3770:13;3786:7;3794;3786:16;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3786:16:24;;-1:-1:-1;3820:19:24;3812:56;;;;-1:-1:-1;;;3812:56:24;;12092:2:32;3812:56:24;;;12074:21:32;12131:2;12111:18;;;12104:30;12170:26;12150:18;;;12143:54;12214:18;;3812:56:24;11890:348:32;1612:85:26;1652:13;1682:10;:8;:10::i;:::-;1675:17;;1612:85;:::o;3229:393:24:-;3301:7;-1:-1:-1;;;;;3327:19:24;;3319:73;;;;-1:-1:-1;;;3319:73:24;;12445:2:32;3319:73:24;;;12427:21:32;12484:2;12464:18;;;12457:30;12523:34;12503:18;;;12496:62;-1:-1:-1;;;12574:18:32;;;12567:39;12623:19;;3319:73:24;12243:405:32;3319:73:24;3402:13;3433:9;3429:165;3450:14;3448:1;:16;3429:165;;;3492:7;3500:1;3492:10;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3483:19:24;;;3492:10;;3483:19;3480:75;;;3532:7;;;;;3480:75;3579:3;;3429:165;;;-1:-1:-1;3610:5:24;3229:393;-1:-1:-1;;3229:393:24:o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;889:324:26:-;3111:19:1;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:1;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:1;1476:19:6;:23;;;3219:66:1;;-1:-1:-1;3268:12:1;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:1;;12855:2:32;3157:201:1;;;12837:21:32;12894:2;12874:18;;;12867:30;12933:34;12913:18;;;12906:62;-1:-1:-1;;;12984:18:32;;;12977:44;13038:19;;3157:201:1;12653:410:32;3157:201:1;3368:12;:16;;-1:-1:-1;;3368:16:1;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:1;;;;;3394:65;938:39:26::1;;;;;;;;;;;;;;-1:-1:-1::0;;;938:39:26::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;938:39:26::1;;::::0;:13:::1;:39::i;:::-;983:25;:23;:25::i;:::-;1014:16;:14;:16::i;:::-;1127:81;1141:66;1127:13;:81::i;:::-;3483:14:1::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:1;;;3553:14;;-1:-1:-1;13220:36:32;;3553:14:1;;13208:2:32;13193:18;3553:14:1;;;;;;;3101:483;889:324:26:o;4121:102:24:-;4177:13;4209:7;4202:14;;;;;:::i;5883:139::-;5977:38;5996:8;6006;5977:18;:38::i;6950:315::-;7118:41;929:10:7;7151:7:24;7118:18;:41::i;:::-;7110:100;;;;-1:-1:-1;;;7110:100:24;;;;;;;:::i;:::-;7220:38;7234:4;7240:2;7244:7;7253:4;7220:13;:38::i;2487:295:26:-;2592:4;;929:10:7;2662:8:26;;2632:39;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2622:50;;;;;;2607:65;;2690:44;2709:12;;2690:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2723:4:26;;;-1:-1:-1;2729:4:26;;-1:-1:-1;2690:18:26;:44::i;:::-;2682:72;;;;-1:-1:-1;;;2682:72:26;;14155:2:32;2682:72:26;;;14137:21:32;14194:2;14174:18;;;14167:30;-1:-1:-1;;;14213:18:32;;;14206:45;14268:18;;2682:72:26;13953:339:32;2682:72:26;2771:4;2764:11;;;2487:295;;;;;;;:::o;4289:379:24:-;4362:13;4449:16;4457:7;4449;:16::i;:::-;4440:73;;;;-1:-1:-1;;;4440:73:24;;;;;;;:::i;:::-;4524:21;4548:10;:8;:10::i;:::-;4524:34;;4599:1;4581:7;4575:21;:25;:86;;;;;;;;;;;;;;;;;4627:7;4636:18;:7;:16;:18::i;:::-;4610:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4575:86;4568:93;4289:379;-1:-1:-1;;;4289:379:24:o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;14974:2:32;2401:73:0::1;::::0;::::1;14956:21:32::0;15013:2;14993:18;;;14986:30;15052:34;15032:18;;;15025:62;-1:-1:-1;;;15103:18:32;;;15096:36;15149:19;;2401:73:0::1;14772:402:32::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;2500:344:24:-:0;2624:4;-1:-1:-1;;;;;;2659:51:24;;-1:-1:-1;;;2659:51:24;;:126;;-1:-1:-1;;;;;;;2726:59:24;;-1:-1:-1;;;2726:59:24;2659:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:9;;;2801:36:24;1060:166:9;9803:108:24;9878:26;9888:2;9892:7;9878:26;;;;;;;;;;;;:9;:26::i;11360:546::-;-1:-1:-1;;;;;11502:16:24;;11494:61;;;;-1:-1:-1;;;11494:61:24;;15381:2:32;11494:61:24;;;15363:21:32;;;15400:18;;;15393:30;15459:34;15439:18;;;15432:62;15511:18;;11494:61:24;15179:356:32;11494:61:24;11570:9;11566:281;11585:16;;;11566:281;;;11626:19;11634:7;;11642:1;11634:10;;;;;;;:::i;:::-;;;;;;;11626:7;:19::i;:::-;11625:20;11617:61;;;;-1:-1:-1;;;11617:61:24;;15742:2:32;11617:61:24;;;15724:21:32;15781:2;15761:18;;;15754:30;15820;15800:18;;;15793:58;15868:18;;11617:61:24;15540:352:32;11617:61:24;11692:48;11721:1;11725:2;11729:7;;11737:1;11729:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;5059:427:24;11692:48;11776:2;11754:7;11762;;11770:1;11762:10;;;;;;;:::i;:::-;;;;;;;11754:19;;;;;;;:::i;:::-;;:24;;-1:-1:-1;;;;;;11754:24:24;-1:-1:-1;;;;;11754:24:24;;;;;;;;;;-1:-1:-1;11819:3:24;11566:281;;;;11891:7;;11861:38;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;11861:38:24;;;11883:1;;11861:38;;11883:1;;11861:38;11360:546;;;:::o;8734:218::-;8799:4;8897:14;8887:7;:24;:58;;;;-1:-1:-1;8943:1:24;8915:7;8923;8915:16;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;8915:16:24;:30;;8880:65;8734:218;-1:-1:-1;;8734:218:24:o;13675:191::-;13749:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;13749:29:24;-1:-1:-1;;;;;13749:29:24;;;;;;;;:24;;13802:43;13749:24;13802:34;:43::i;:::-;-1:-1:-1;;;;;13793:66:24;;;;;;;;;;;13675:191;;:::o;9110:363::-;9203:4;9227:16;9235:7;9227;:16::i;:::-;9219:72;;;;-1:-1:-1;;;9219:72:24;;16364:2:32;9219:72:24;;;16346:21:32;16403:2;16383:18;;;16376:30;16442:34;16422:18;;;16415:62;-1:-1:-1;;;16493:18:32;;;16486:42;16545:19;;9219:72:24;16162:408:32;9219:72:24;9301:13;9317:43;9352:7;9317:34;:43::i;:::-;9301:59;;9389:5;-1:-1:-1;;;;;9378:16:24;:7;-1:-1:-1;;;;;9378:16:24;;:52;;;-1:-1:-1;;;;;;6208:25:24;;;6185:4;6208:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;9398:32;9378:87;;;;9458:7;-1:-1:-1;;;;;9434:31:24;:20;9446:7;9434:11;:20::i;:::-;-1:-1:-1;;;;;9434:31:24;;9370:96;9110:363;-1:-1:-1;;;;9110:363:24:o;12877:686::-;13051:4;-1:-1:-1;;;;;13004:51:24;:43;13039:7;13004:34;:43::i;:::-;-1:-1:-1;;;;;13004:51:24;;12996:101;;;;-1:-1:-1;;;12996:101:24;;16777:2:32;12996:101:24;;;16759:21:32;16816:2;16796:18;;;16789:30;16855:34;16835:18;;;16828:62;-1:-1:-1;;;16906:18:32;;;16899:35;16951:19;;12996:101:24;16575:401:32;12996:101:24;-1:-1:-1;;;;;13115:16:24;;13107:65;;;;-1:-1:-1;;;13107:65:24;;17183:2:32;13107:65:24;;;17165:21:32;17222:2;17202:18;;;17195:30;17261:34;17241:18;;;17234:62;-1:-1:-1;;;17312:18:32;;;17305:34;17356:19;;13107:65:24;16981:400:32;13107:65:24;13284:29;13301:1;13305:7;13284:8;:29::i;:::-;13460:2;13441:7;13449;13441:16;;;;;;;:::i;:::-;;:21;;-1:-1:-1;;;;;;13441:21:24;-1:-1:-1;;;;;13441:21:24;;;;;;13478:27;;13497:7;;13478:27;;;;;;;;;;-1:-1:-1;;13478:27:24;12877:686;;;:::o;1308:66:26:-;1334:13:0;:11;:13::i;2650:952:13:-;689:66;3096:48;;;3092:504;;;3160:37;3179:17;3160:18;:37::i;3092:504::-;3250:17;-1:-1:-1;;;;;3232:50:13;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3232:52:13;;;;;;;;-1:-1:-1;;3232:52:13;;;;;;;;;;;;:::i;:::-;;;3228:291;;3448:56;;-1:-1:-1;;;3448:56:13;;17777:2:32;3448:56:13;;;17759:21:32;17816:2;17796:18;;;17789:30;17855:34;17835:18;;;17828:62;-1:-1:-1;;;17906:18:32;;;17899:44;17960:19;;3448:56:13;17575:410:32;3228:291:13;-1:-1:-1;;;;;;;;;;;3334:28:13;;3326:82;;;;-1:-1:-1;;;3326:82:13;;18192:2:32;3326:82:13;;;18174:21:32;18231:2;18211:18;;;18204:30;18270:34;18250:18;;;18243:62;-1:-1:-1;;;18321:18:32;;;18314:39;18370:19;;3326:82:13;17990:405:32;3326:82:13;3285:138;3532:53;3550:17;3569:4;3575:9;3532:17;:53::i;12122:431:24:-;12181:13;12197:43;12232:7;12197:34;:43::i;:::-;12181:59;;12337:29;12354:1;12358:7;12337:8;:29::i;:::-;12493:1;12466:7;12474;12466:16;;;;;;;:::i;:::-;;:29;;-1:-1:-1;;;;;;12466:29:24;-1:-1:-1;;;;;12466:29:24;;;;;;12510:36;;12538:7;;-1:-1:-1;;12510:36:24;;;;;;-1:-1:-1;;12510:36:24;12171:382;12122:431;:::o;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:7;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;18602:2:32;1654:68:0;;;18584:21:32;;;18621:18;;;18614:30;18680:34;18660:18;;;18653:62;18732:18;;1654:68:0;18400:356:32;1378:110:26;1438:13;1470;1463:20;;;;;:::i;2673:187:0:-;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;2118:149:24:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;2221:39:24::1;2245:5;2252:7;2221:23;:39::i;851:68:22:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;1003:95:0:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;1217:87:26:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1287:4:26::1;:12:::0;1217:87::o;14002:305:24:-;-1:-1:-1;;;;;14120:24:24;;929:10:7;14120:24:24;;14112:62;;;;-1:-1:-1;;;14112:62:24;;19375:2:32;14112:62:24;;;19357:21:32;19414:2;19394:18;;;19387:30;19453:27;19433:18;;;19426:55;19498:18;;14112:62:24;19173:349:32;14112:62:24;929:10:7;14184:32:24;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;14184:42:24;;;;;;;;;;;;:53;;-1:-1:-1;;14184:53:24;;;;;;;;;;14252:48;;540:41:32;;;14184:42:24;;929:10:7;14252:48:24;;513:18:32;14252:48:24;;;;;;;14002:305;;:::o;8126:::-;8276:28;8286:4;8292:2;8296:7;8276:9;:28::i;:::-;8322:47;8345:4;8351:2;8355:7;8364:4;8322:22;:47::i;:::-;8314:110;;;;-1:-1:-1;;;8314:110:24;;;;;;;:::i;1153:184:19:-;1274:4;1326;1297:25;1310:5;1317:4;1297:12;:25::i;:::-;:33;;1153:184;-1:-1:-1;;;;1153:184:19:o;403:703:8:-;459:13;676:10;672:51;;-1:-1:-1;;702:10:8;;;;;;;;;;;;-1:-1:-1;;;702:10:8;;;;;403:703::o;672:51::-;747:5;732:12;786:75;793:9;;786:75;;818:8;;;;:::i;:::-;;-1:-1:-1;840:10:8;;-1:-1:-1;848:2:8;840:10;;:::i;:::-;;;786:75;;;870:19;902:6;892:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;892:17:8;;870:39;;919:150;926:10;;919:150;;952:11;962:1;952:11;;:::i;:::-;;-1:-1:-1;1020:10:8;1028:2;1020:5;:10;:::i;:::-;1007:24;;:2;:24;:::i;:::-;994:39;;977:6;984;977:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;977:56:8;;;;;;;;-1:-1:-1;1047:11:8;1056:2;1047:11;;:::i;:::-;;;919:150;;10132:309:24;10256:18;10262:2;10266:7;10256:5;:18::i;:::-;10305:53;10336:1;10340:2;10344:7;10353:4;10305:22;:53::i;:::-;10284:150;;;;-1:-1:-1;;;10284:150:24;;;;;;;:::i;1532:259:13:-;-1:-1:-1;;;;;1476:19:6;;;1605:95:13;;;;-1:-1:-1;;;1605:95:13;;21057:2:32;1605:95:13;;;21039:21:32;21096:2;21076:18;;;21069:30;21135:34;21115:18;;;21108:62;-1:-1:-1;;;21186:18:32;;;21179:43;21239:19;;1605:95:13;20855:409:32;1605:95:13;-1:-1:-1;;;;;;;;;;;1710:74:13;;-1:-1:-1;;;;;;1710:74:13;-1:-1:-1;;;;;1710:74:13;;;;;;;;;;1532:259::o;2183:295::-;2321:29;2332:17;2321:10;:29::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;:53::i;2273:160:24:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;2386:13:24;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2409:17:24;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;1104:111:0:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:7::0;1176:18:0::1;:32::i;15112:853:24:-:0;15261:4;-1:-1:-1;;;;;15281:13:24;;1476:19:6;:23;15277:682:24;;15316:82;;-1:-1:-1;;;15316:82:24;;-1:-1:-1;;;;;15316:47:24;;;;;:82;;929:10:7;;15378:4:24;;15384:7;;15393:4;;15316:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15316:82:24;;;;;;;;-1:-1:-1;;15316:82:24;;;;;;;;;;;;:::i;:::-;;;15312:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15576:13:24;;15572:321;;15618:60;;-1:-1:-1;;;15618:60:24;;;;;;;:::i;15572:321::-;15845:6;15839:13;15830:6;15826:2;15822:15;15815:38;15312:595;-1:-1:-1;;;;;;15448:62:24;-1:-1:-1;;;15448:62:24;;-1:-1:-1;15441:69:24;;15277:682;-1:-1:-1;15944:4:24;15937:11;;1991:290:19;2074:7;2116:4;2074:7;2130:116;2154:5;:12;2150:1;:16;2130:116;;;2202:33;2212:12;2226:5;2232:1;2226:8;;;;;;;;:::i;:::-;;;;;;;2202:9;:33::i;:::-;2187:48;-1:-1:-1;2168:3:19;;;;:::i;:::-;;;;2130:116;;;-1:-1:-1;2262:12:19;1991:290;-1:-1:-1;;;1991:290:19:o;10763:528:24:-;-1:-1:-1;;;;;10842:16:24;;10834:61;;;;-1:-1:-1;;;10834:61:24;;15381:2:32;10834:61:24;;;15363:21:32;;;15400:18;;;15393:30;15459:34;15439:18;;;15432:62;15511:18;;10834:61:24;15179:356:32;10834:61:24;10914:16;10922:7;10914;:16::i;:::-;10913:17;10905:58;;;;-1:-1:-1;;;10905:58:24;;15742:2:32;10905:58:24;;;15724:21:32;15781:2;15761:18;;;15754:30;15820;15800:18;;;15793:58;15868:18;;10905:58:24;15540:352:32;10905:58:24;11132:2;11113:7;11121;11113:16;;;;;;;:::i;:::-;;:21;;-1:-1:-1;;;;;;11113:21:24;-1:-1:-1;;;;;11113:21:24;;;;;;11158:33;;11183:7;;11158:33;;;-1:-1:-1;;11158:33:24;;-1:-1:-1;;11158:33:24;10763:528;;:::o;1897:152:13:-;1963:37;1982:17;1963:18;:37::i;:::-;2015:27;;-1:-1:-1;;;;;2015:27:13;;;;;;;;1897:152;:::o;6469:198:17:-;6552:12;6583:77;6604:6;6612:4;6583:77;;;;;;;;;;;;;;;;;:20;:77::i;8054:147:19:-;8117:7;8147:1;8143;:5;:51;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8143:51;;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8151:20;8207:261;6853:325:17;6994:12;7019;7033:23;7060:6;-1:-1:-1;;;;;7060:19:17;7080:4;7060:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:67;;;;7102:69;7129:6;7137:7;7146:10;7158:12;7102:26;:69::i;:::-;7095:76;6853:325;-1:-1:-1;;;;;;6853:325:17:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:17;;7697:286;;-1:-1:-1;;;;;1476:19:6;;;7908:60:17;;;;-1:-1:-1;;;7908:60:17;;22498:2:32;7908:60:17;;;22480:21:32;22537:2;22517:18;;;22510:30;22576:31;22556:18;;;22549:59;22625:18;;7908:60:17;22296:353:32;7908:60:17;-1:-1:-1;8003:10:17;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:17;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:32;-1:-1:-1;;;;;;88:32:32;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:32;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:32;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:32:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:367::-;1406:8;1416:6;1470:3;1463:4;1455:6;1451:17;1447:27;1437:55;;1488:1;1485;1478:12;1437:55;-1:-1:-1;1511:20:32;;1554:18;1543:30;;1540:50;;;1586:1;1583;1576:12;1540:50;1623:4;1615:6;1611:17;1599:29;;1683:3;1676:4;1666:6;1663:1;1659:14;1651:6;1647:27;1643:38;1640:47;1637:67;;;1700:1;1697;1690:12;1637:67;1343:367;;;;;:::o;1715:773::-;1837:6;1845;1853;1861;1914:2;1902:9;1893:7;1889:23;1885:32;1882:52;;;1930:1;1927;1920:12;1882:52;1970:9;1957:23;1999:18;2040:2;2032:6;2029:14;2026:34;;;2056:1;2053;2046:12;2026:34;2095:70;2157:7;2148:6;2137:9;2133:22;2095:70;:::i;:::-;2184:8;;-1:-1:-1;2069:96:32;-1:-1:-1;2272:2:32;2257:18;;2244:32;;-1:-1:-1;2288:16:32;;;2285:36;;;2317:1;2314;2307:12;2285:36;;2356:72;2420:7;2409:8;2398:9;2394:24;2356:72;:::i;:::-;1715:773;;;;-1:-1:-1;2447:8:32;-1:-1:-1;;;;1715:773:32:o;2493:180::-;2552:6;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;-1:-1:-1;2644:23:32;;2493:180;-1:-1:-1;2493:180:32:o;2886:173::-;2954:20;;-1:-1:-1;;;;;3003:31:32;;2993:42;;2983:70;;3049:1;3046;3039:12;2983:70;2886:173;;;:::o;3064:254::-;3132:6;3140;3193:2;3181:9;3172:7;3168:23;3164:32;3161:52;;;3209:1;3206;3199:12;3161:52;3232:29;3251:9;3232:29;:::i;:::-;3222:39;3308:2;3293:18;;;;3280:32;;-1:-1:-1;;;3064:254:32:o;3505:328::-;3582:6;3590;3598;3651:2;3639:9;3630:7;3626:23;3622:32;3619:52;;;3667:1;3664;3657:12;3619:52;3690:29;3709:9;3690:29;:::i;:::-;3680:39;;3738:38;3772:2;3761:9;3757:18;3738:38;:::i;:::-;3728:48;;3823:2;3812:9;3808:18;3795:32;3785:42;;3505:328;;;;;:::o;3838:186::-;3897:6;3950:2;3938:9;3929:7;3925:23;3921:32;3918:52;;;3966:1;3963;3956:12;3918:52;3989:29;4008:9;3989:29;:::i;4029:127::-;4090:10;4085:3;4081:20;4078:1;4071:31;4121:4;4118:1;4111:15;4145:4;4142:1;4135:15;4161:718;4203:5;4256:3;4249:4;4241:6;4237:17;4233:27;4223:55;;4274:1;4271;4264:12;4223:55;4310:6;4297:20;4336:18;4373:2;4369;4366:10;4363:36;;;4379:18;;:::i;:::-;4454:2;4448:9;4422:2;4508:13;;-1:-1:-1;;4504:22:32;;;4528:2;4500:31;4496:40;4484:53;;;4552:18;;;4572:22;;;4549:46;4546:72;;;4598:18;;:::i;:::-;4638:10;4634:2;4627:22;4673:2;4665:6;4658:18;4719:3;4712:4;4707:2;4699:6;4695:15;4691:26;4688:35;4685:55;;;4736:1;4733;4726:12;4685:55;4800:2;4793:4;4785:6;4781:17;4774:4;4766:6;4762:17;4749:54;4847:1;4840:4;4835:2;4827:6;4823:15;4819:26;4812:37;4867:6;4858:15;;;;;;4161:718;;;;:::o;4884:394::-;4961:6;4969;5022:2;5010:9;5001:7;4997:23;4993:32;4990:52;;;5038:1;5035;5028:12;4990:52;5061:29;5080:9;5061:29;:::i;:::-;5051:39;;5141:2;5130:9;5126:18;5113:32;5168:18;5160:6;5157:30;5154:50;;;5200:1;5197;5190:12;5154:50;5223:49;5264:7;5255:6;5244:9;5240:22;5223:49;:::i;:::-;5213:59;;;4884:394;;;;;:::o;5465:592::-;5536:6;5544;5597:2;5585:9;5576:7;5572:23;5568:32;5565:52;;;5613:1;5610;5603:12;5565:52;5653:9;5640:23;5682:18;5723:2;5715:6;5712:14;5709:34;;;5739:1;5736;5729:12;5709:34;5777:6;5766:9;5762:22;5752:32;;5822:7;5815:4;5811:2;5807:13;5803:27;5793:55;;5844:1;5841;5834:12;5793:55;5884:2;5871:16;5910:2;5902:6;5899:14;5896:34;;;5926:1;5923;5916:12;5896:34;5971:7;5966:2;5957:6;5953:2;5949:15;5945:24;5942:37;5939:57;;;5992:1;5989;5982:12;5939:57;6023:2;6015:11;;;;;6045:6;;-1:-1:-1;5465:592:32;;-1:-1:-1;;;;5465:592:32:o;6062:347::-;6127:6;6135;6188:2;6176:9;6167:7;6163:23;6159:32;6156:52;;;6204:1;6201;6194:12;6156:52;6227:29;6246:9;6227:29;:::i;:::-;6217:39;;6306:2;6295:9;6291:18;6278:32;6353:5;6346:13;6339:21;6332:5;6329:32;6319:60;;6375:1;6372;6365:12;6319:60;6398:5;6388:15;;;6062:347;;;;;:::o;6414:537::-;6509:6;6517;6525;6533;6586:3;6574:9;6565:7;6561:23;6557:33;6554:53;;;6603:1;6600;6593:12;6554:53;6626:29;6645:9;6626:29;:::i;:::-;6616:39;;6674:38;6708:2;6697:9;6693:18;6674:38;:::i;:::-;6664:48;;6759:2;6748:9;6744:18;6731:32;6721:42;;6814:2;6803:9;6799:18;6786:32;6841:18;6833:6;6830:30;6827:50;;;6873:1;6870;6863:12;6827:50;6896:49;6937:7;6928:6;6917:9;6913:22;6896:49;:::i;:::-;6886:59;;;6414:537;;;;;;;:::o;6956:260::-;7024:6;7032;7085:2;7073:9;7064:7;7060:23;7056:32;7053:52;;;7101:1;7098;7091:12;7053:52;7124:29;7143:9;7124:29;:::i;:::-;7114:39;;7172:38;7206:2;7195:9;7191:18;7172:38;:::i;:::-;7162:48;;6956:260;;;;;:::o;7221:380::-;7300:1;7296:12;;;;7343;;;7364:61;;7418:4;7410:6;7406:17;7396:27;;7364:61;7471:2;7463:6;7460:14;7440:18;7437:38;7434:161;;;7517:10;7512:3;7508:20;7505:1;7498:31;7552:4;7549:1;7542:15;7580:4;7577:1;7570:15;7434:161;;7221:380;;;:::o;7606:127::-;7667:10;7662:3;7658:20;7655:1;7648:31;7698:4;7695:1;7688:15;7722:4;7719:1;7712:15;7738:408;7940:2;7922:21;;;7979:2;7959:18;;;7952:30;8018:34;8013:2;7998:18;;7991:62;-1:-1:-1;;;8084:2:32;8069:18;;8062:42;8136:3;8121:19;;7738:408::o;8984:410::-;9186:2;9168:21;;;9225:2;9205:18;;;9198:30;9264:34;9259:2;9244:18;;9237:62;-1:-1:-1;;;9330:2:32;9315:18;;9308:44;9384:3;9369:19;;8984:410::o;10226:408::-;10428:2;10410:21;;;10467:2;10447:18;;;10440:30;10506:34;10501:2;10486:18;;10479:62;-1:-1:-1;;;10572:2:32;10557:18;;10550:42;10624:3;10609:19;;10226:408::o;10639:::-;10841:2;10823:21;;;10880:2;10860:18;;;10853:30;10919:34;10914:2;10899:18;;10892:62;-1:-1:-1;;;10985:2:32;10970:18;;10963:42;11037:3;11022:19;;10639:408::o;13267:304::-;13337:3;-1:-1:-1;;;;;13358:31:32;;13355:51;;;13402:1;13399;13392:12;13355:51;13438:6;13435:1;13431:14;13479:8;13472:5;13467:3;13454:34;13545:1;13507:18;;13534:13;;;-1:-1:-1;13507:18:32;;13267:304;-1:-1:-1;;13267:304:32:o;13576:372::-;13830:26;13826:31;13817:6;13813:2;13809:15;13805:53;13800:3;13793:66;13775:3;13875:67;13938:2;13933:3;13929:12;13921:6;13913;13875:67;:::i;:::-;13868:74;13576:372;-1:-1:-1;;;;;13576:372:32:o;14297:470::-;14476:3;14514:6;14508:13;14530:53;14576:6;14571:3;14564:4;14556:6;14552:17;14530:53;:::i;:::-;14646:13;;14605:16;;;;14668:57;14646:13;14605:16;14702:4;14690:17;;14668:57;:::i;:::-;14741:20;;14297:470;-1:-1:-1;;;;14297:470:32:o;15897:260::-;16068:3;16093:58;16147:3;16139:6;16131;16093:58;:::i;17386:184::-;17456:6;17509:2;17497:9;17488:7;17484:23;17480:32;17477:52;;;17525:1;17522;17515:12;17477:52;-1:-1:-1;17548:16:32;;17386:184;-1:-1:-1;17386:184:32:o;18761:407::-;18963:2;18945:21;;;19002:2;18982:18;;;18975:30;19041:34;19036:2;19021:18;;19014:62;-1:-1:-1;;;19107:2:32;19092:18;;19085:41;19158:3;19143:19;;18761:407::o;19527:414::-;19729:2;19711:21;;;19768:2;19748:18;;;19741:30;19807:34;19802:2;19787:18;;19780:62;-1:-1:-1;;;19873:2:32;19858:18;;19851:48;19931:3;19916:19;;19527:414::o;19946:127::-;20007:10;20002:3;19998:20;19995:1;19988:31;20038:4;20035:1;20028:15;20062:4;20059:1;20052:15;20078:135;20117:3;-1:-1:-1;;20138:17:32;;20135:43;;;20158:18;;:::i;:::-;-1:-1:-1;20205:1:32;20194:13;;20078:135::o;20218:127::-;20279:10;20274:3;20270:20;20267:1;20260:31;20310:4;20307:1;20300:15;20334:4;20331:1;20324:15;20350:120;20390:1;20416;20406:35;;20421:18;;:::i;:::-;-1:-1:-1;20455:9:32;;20350:120::o;20475:125::-;20515:4;20543:1;20540;20537:8;20534:34;;;20548:18;;:::i;:::-;-1:-1:-1;20585:9:32;;20475:125::o;20605:112::-;20637:1;20663;20653:35;;20668:18;;:::i;:::-;-1:-1:-1;20702:9:32;;20605:112::o;20722:128::-;20762:3;20793:1;20789:6;20786:1;20783:13;20780:39;;;20799:18;;:::i;:::-;-1:-1:-1;20835:9:32;;20722:128::o;21269:489::-;-1:-1:-1;;;;;21538:15:32;;;21520:34;;21590:15;;21585:2;21570:18;;21563:43;21637:2;21622:18;;21615:34;;;21685:3;21680:2;21665:18;;21658:31;;;21463:4;;21706:46;;21732:19;;21724:6;21706:46;:::i;21763:249::-;21832:6;21885:2;21873:9;21864:7;21860:23;21856:32;21853:52;;;21901:1;21898;21891:12;21853:52;21933:9;21927:16;21952:30;21976:5;21952:30;:::i;22017:274::-;22146:3;22184:6;22178:13;22200:53;22246:6;22241:3;22234:4;22226:6;22222:17;22200:53;:::i;:::-;22269:16;;;;;22017:274;-1:-1:-1;;22017:274:32:o",
    "linkReferences": {},
    "immutableReferences": {
      "1525": [
        {
          "start": 2380,
          "length": 32
        },
        {
          "start": 2444,
          "length": 32
        },
        {
          "start": 2677,
          "length": 32
        },
        {
          "start": 2741,
          "length": 32
        },
        {
          "start": 3007,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "burn(uint256)": "42966c68",
    "checkValidity(uint256[],bytes32[])": "ba70153c",
    "exists(uint256)": "4f558e79",
    "getApproved(uint256)": "081812fc",
    "initialize()": "8129fc1c",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintAllBeaNFT(uint256[],bytes32[])": "073b0d36",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBaseURI(string)": "55f804b3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenByIndex(uint256)": "4f6ccce7",
    "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "ast": {
    "absolutePath": "src/MyERC721UpgradeableOptimized.sol",
    "id": 13810,
    "exportedSymbols": {
      "Address": [
        1955
      ],
      "AddressUpgradeable": [
        758
      ],
      "ContextUpgradeable": [
        800
      ],
      "ERC165Upgradeable": [
        1070
      ],
      "ERC1967Upgrade": [
        1447
      ],
      "ERC721EnumerableUpgradeableOptimized": [
        12512
      ],
      "ERC721UpgradeableOptimized": [
        13591
      ],
      "IBeacon": [
        1509
      ],
      "IERC165Upgradeable": [
        1082
      ],
      "IERC1822Proxiable": [
        1092
      ],
      "IERC721EnumerableUpgradeable": [
        447
      ],
      "IERC721MetadataUpgradeable": [
        474
      ],
      "IERC721ReceiverUpgradeable": [
        300
      ],
      "IERC721Upgradeable": [
        416
      ],
      "Initializable": [
        282
      ],
      "MerkleProof": [
        2517
      ],
      "MyERC721UpgradeableOptimized": [
        13809
      ],
      "OwnableUpgradeable": [
        131
      ],
      "StorageSlot": [
        2015
      ],
      "StringsUpgradeable": [
        1026
      ],
      "UUPSUpgradeable": [
        1625
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3038:26",
    "nodes": [
      {
        "id": 13611,
        "nodeType": "PragmaDirective",
        "src": "32:23:26",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 13612,
        "nodeType": "ImportDirective",
        "src": "83:52:26",
        "absolutePath": "src/ERC721EnumerableUpgradeableOptimized.sol",
        "file": "./ERC721EnumerableUpgradeableOptimized.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13810,
        "sourceUnit": 12513,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13613,
        "nodeType": "ImportDirective",
        "src": "136:84:26",
        "absolutePath": "lib/Openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "Openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13810,
        "sourceUnit": 132,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13614,
        "nodeType": "ImportDirective",
        "src": "221:77:26",
        "absolutePath": "lib/Openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "Openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13810,
        "sourceUnit": 2518,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13615,
        "nodeType": "ImportDirective",
        "src": "299:74:26",
        "absolutePath": "lib/Openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "Openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13810,
        "sourceUnit": 1626,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13809,
        "nodeType": "ContractDefinition",
        "src": "695:2374:26",
        "nodes": [
          {
            "id": 13626,
            "nodeType": "VariableDeclaration",
            "src": "830:28:26",
            "constant": false,
            "mutability": "mutable",
            "name": "_baseTokenURI",
            "nameLocation": "845:13:26",
            "scope": 13809,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 13625,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "830:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 13628,
            "nodeType": "VariableDeclaration",
            "src": "862:20:26",
            "constant": false,
            "mutability": "mutable",
            "name": "root",
            "nameLocation": "878:4:26",
            "scope": 13809,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13627,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "862:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 13649,
            "nodeType": "FunctionDefinition",
            "src": "889:324:26",
            "body": {
              "id": 13648,
              "nodeType": "Block",
              "src": "932:281:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5265706c616e74204265614e4654",
                        "id": 13634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "952:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_291f6ed5c40260f67e6975c94cd9958b55c75def4ee6b8128dfc07a7dca1cdf1",
                          "typeString": "literal_string \"Replant BeaNFT\""
                        },
                        "value": "Replant BeaNFT"
                      },
                      {
                        "hexValue": "424e4654",
                        "id": 13635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "970:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e6745b3cfc67f270bc8e59f2a9eb2eade3f9ba1f67e62d12af610af4cc76070",
                          "typeString": "literal_string \"BNFT\""
                        },
                        "value": "BNFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_291f6ed5c40260f67e6975c94cd9958b55c75def4ee6b8128dfc07a7dca1cdf1",
                          "typeString": "literal_string \"Replant BeaNFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e6745b3cfc67f270bc8e59f2a9eb2eade3f9ba1f67e62d12af610af4cc76070",
                          "typeString": "literal_string \"BNFT\""
                        }
                      ],
                      "id": 13633,
                      "name": "__ERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12718,
                      "src": "938:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 13636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "938:39:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13637,
                  "nodeType": "ExpressionStatement",
                  "src": "938:39:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13638,
                      "name": "__ERC721Enumerable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12386,
                      "src": "983:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "983:25:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13640,
                  "nodeType": "ExpressionStatement",
                  "src": "983:25:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13641,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1014:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1014:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13643,
                  "nodeType": "ExpressionStatement",
                  "src": "1014:16:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307834373366356166393263366337316262356564303164346461653839643733643035303331383037383639323662626131343632623061363164356134623333",
                        "id": 13645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1141:66:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32226151489369235275125962376435242238729151880932251382879370410197434125107_by_1",
                          "typeString": "int_const 3222...(69 digits omitted)...5107"
                        },
                        "value": "0x473f5af92c6c71bb5ed01d4dae89d73d0503180786926bba1462b0a61d5a4b33"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_32226151489369235275125962376435242238729151880932251382879370410197434125107_by_1",
                          "typeString": "int_const 3222...(69 digits omitted)...5107"
                        }
                      ],
                      "id": 13644,
                      "name": "__merkle_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13661,
                      "src": "1127:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 13646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1127:81:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13647,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:81:26"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13631,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13630,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 202,
                  "src": "920:11:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "920:11:26"
              }
            ],
            "name": "initialize",
            "nameLocation": "898:10:26",
            "parameters": {
              "id": 13629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:2:26"
            },
            "returnParameters": {
              "id": 13632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "932:0:26"
            },
            "scope": 13809,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13661,
            "nodeType": "FunctionDefinition",
            "src": "1217:87:26",
            "body": {
              "id": 13660,
              "nodeType": "Block",
              "src": "1281:23:26",
              "statements": [
                {
                  "expression": {
                    "id": 13658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13656,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13628,
                      "src": "1287:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13657,
                      "name": "_root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13651,
                      "src": "1294:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1287:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 13659,
                  "nodeType": "ExpressionStatement",
                  "src": "1287:12:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13654,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13653,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 245,
                  "src": "1264:16:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1264:16:26"
              }
            ],
            "name": "__merkle_init",
            "nameLocation": "1226:13:26",
            "parameters": {
              "id": 13652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13651,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "1248:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13661,
                  "src": "1240:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13650,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:15:26"
            },
            "returnParameters": {
              "id": 13655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:0:26"
            },
            "scope": 13809,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13670,
            "nodeType": "FunctionDefinition",
            "src": "1308:66:26",
            "body": {
              "id": 13669,
              "nodeType": "Block",
              "src": "1372:2:26",
              "statements": []
            },
            "baseFunctions": [
              1624
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13667,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13666,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45,
                  "src": "1362:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1362:9:26"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "1317:17:26",
            "overrides": {
              "id": 13665,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1353:8:26"
            },
            "parameters": {
              "id": 13664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13670,
                  "src": "1335:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1334:9:26"
            },
            "returnParameters": {
              "id": 13668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1372:0:26"
            },
            "scope": 13809,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13679,
            "nodeType": "FunctionDefinition",
            "src": "1378:110:26",
            "body": {
              "id": 13678,
              "nodeType": "Block",
              "src": "1453:35:26",
              "statements": [
                {
                  "expression": {
                    "id": 13676,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13626,
                    "src": "1470:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 13675,
                  "id": 13677,
                  "nodeType": "Return",
                  "src": "1463:20:26"
                }
              ]
            },
            "baseFunctions": [
              12917
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1387:8:26",
            "overrides": {
              "id": 13672,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1420:8:26"
            },
            "parameters": {
              "id": 13671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1395:2:26"
            },
            "returnParameters": {
              "id": 13675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13674,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13679,
                  "src": "1438:13:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13673,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1437:15:26"
            },
            "scope": 13809,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 13691,
            "nodeType": "FunctionDefinition",
            "src": "1492:116:26",
            "body": {
              "id": 13690,
              "nodeType": "Block",
              "src": "1564:44:26",
              "statements": [
                {
                  "expression": {
                    "id": 13688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13686,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13626,
                      "src": "1572:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13687,
                      "name": "newBaseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13681,
                      "src": "1588:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "1572:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 13689,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:31:26"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13684,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13683,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45,
                  "src": "1554:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1554:9:26"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "1501:10:26",
            "parameters": {
              "id": 13682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13681,
                  "mutability": "mutable",
                  "name": "newBaseTokenURI",
                  "nameLocation": "1528:15:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13691,
                  "src": "1512:31:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13680,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1511:33:26"
            },
            "returnParameters": {
              "id": 13685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1564:0:26"
            },
            "scope": 13809,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13700,
            "nodeType": "FunctionDefinition",
            "src": "1612:85:26",
            "body": {
              "id": 13699,
              "nodeType": "Block",
              "src": "1667:30:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13696,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13679
                      ],
                      "referencedDeclaration": 13679,
                      "src": "1682:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 13697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1682:10:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 13695,
                  "id": 13698,
                  "nodeType": "Return",
                  "src": "1675:17:26"
                }
              ]
            },
            "functionSelector": "6c0360eb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseURI",
            "nameLocation": "1621:7:26",
            "parameters": {
              "id": 13692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1628:2:26"
            },
            "returnParameters": {
              "id": 13695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13694,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13700,
                  "src": "1652:13:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13693,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1651:15:26"
            },
            "scope": 13809,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13712,
            "nodeType": "FunctionDefinition",
            "src": "1701:96:26",
            "body": {
              "id": 13711,
              "nodeType": "Block",
              "src": "1761:36:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13708,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13702,
                        "src": "1784:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13707,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13142,
                      "src": "1776:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 13709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1776:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13706,
                  "id": 13710,
                  "nodeType": "Return",
                  "src": "1769:23:26"
                }
              ]
            },
            "functionSelector": "4f558e79",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nameLocation": "1710:6:26",
            "parameters": {
              "id": 13703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13702,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1725:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13712,
                  "src": "1717:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1716:17:26"
            },
            "returnParameters": {
              "id": 13706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13705,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13712,
                  "src": "1755:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13704,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1755:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1754:6:26"
            },
            "scope": 13809,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13731,
            "nodeType": "FunctionDefinition",
            "src": "1801:173:26",
            "body": {
              "id": 13730,
              "nodeType": "Block",
              "src": "1839:135:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13719,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "1874:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1874:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 13721,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13714,
                            "src": "1888:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 13718,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13183,
                          "src": "1855:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 13722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1855:41:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
                        "id": 13723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1898:48:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b",
                          "typeString": "literal_string \"ERC721: caller is not token owner nor approved\""
                        },
                        "value": "ERC721: caller is not token owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b",
                          "typeString": "literal_string \"ERC721: caller is not token owner nor approved\""
                        }
                      ],
                      "id": 13717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1847:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:100:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13725,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:100:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13727,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13714,
                        "src": "1961:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13726,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13398,
                      "src": "1955:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 13728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:14:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13729,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:14:26"
                }
              ]
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1810:4:26",
            "parameters": {
              "id": 13715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13714,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1823:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13731,
                  "src": "1815:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1814:17:26"
            },
            "returnParameters": {
              "id": 13716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:0:26"
            },
            "scope": 13809,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13768,
            "nodeType": "FunctionDefinition",
            "src": "2141:342:26",
            "body": {
              "id": 13767,
              "nodeType": "Block",
              "src": "2231:252:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13742,
                        "name": "TokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13735,
                        "src": "2323:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 13743,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13738,
                        "src": "2331:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      ],
                      "id": 13741,
                      "name": "checkValidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13803,
                      "src": "2309:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[] calldata,bytes32[] calldata) view returns (bool)"
                      }
                    },
                    "id": 13744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:34:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13745,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:34:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13746,
                        "name": "TokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13735,
                        "src": "2353:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 13747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2353:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 13748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2371:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2353:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 13765,
                    "nodeType": "Block",
                    "src": "2431:47:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 13760,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 785,
                                "src": "2450:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 13761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2450:12:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 13762,
                              "name": "TokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13735,
                              "src": "2463:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "id": 13759,
                            "name": "_batchMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13349,
                            "src": "2439:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (address,uint256[] calldata)"
                            }
                          },
                          "id": 13763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2439:32:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13764,
                        "nodeType": "ExpressionStatement",
                        "src": "2439:32:26"
                      }
                    ]
                  },
                  "id": 13766,
                  "nodeType": "IfStatement",
                  "src": "2349:129:26",
                  "trueBody": {
                    "id": 13758,
                    "nodeType": "Block",
                    "src": "2373:49:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 13751,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 785,
                                "src": "2391:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 13752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2391:12:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 13753,
                                "name": "TokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13735,
                                "src": "2404:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 13755,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 13754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2412:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2404:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 13750,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              13198,
                              13227
                            ],
                            "referencedDeclaration": 13198,
                            "src": "2381:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 13756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2381:34:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13757,
                        "nodeType": "ExpressionStatement",
                        "src": "2381:34:26"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 13732,
              "nodeType": "StructuredDocumentation",
              "src": "1982:110:26",
              "text": "@dev concatinates the tokenID array with address, and verifies that the user is whitelited for those mints"
            },
            "functionSelector": "073b0d36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintAllBeaNFT",
            "nameLocation": "2150:13:26",
            "parameters": {
              "id": 13739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13735,
                  "mutability": "mutable",
                  "name": "TokenID",
                  "nameLocation": "2183:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13768,
                  "src": "2164:26:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13733,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2164:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13734,
                    "nodeType": "ArrayTypeName",
                    "src": "2164:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13738,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "2211:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13768,
                  "src": "2192:30:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13736,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2192:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 13737,
                    "nodeType": "ArrayTypeName",
                    "src": "2192:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2163:60:26"
            },
            "returnParameters": {
              "id": 13740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2231:0:26"
            },
            "scope": 13809,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13803,
            "nodeType": "FunctionDefinition",
            "src": "2487:295:26",
            "body": {
              "id": 13802,
              "nodeType": "Block",
              "src": "2597:185:26",
              "statements": [
                {
                  "assignments": [
                    13780
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13780,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "2615:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13802,
                      "src": "2607:12:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13779,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2607:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13789,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13784,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "2649:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2649:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 13786,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13771,
                            "src": "2662:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          ],
                          "expression": {
                            "id": 13782,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2632:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 13783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2632:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 13787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2632:39:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13781,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2622:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 13788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:50:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2607:65:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13793,
                            "name": "_merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13774,
                            "src": "2709:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 13794,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13628,
                            "src": "2723:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 13795,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13780,
                            "src": "2729:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 13791,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2517,
                            "src": "2690:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$2517_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 13792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2039,
                          "src": "2690:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 13796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2690:44:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742070726f6f66",
                        "id": 13797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2736:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d",
                          "typeString": "literal_string \"Incorrect proof\""
                        },
                        "value": "Incorrect proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d",
                          "typeString": "literal_string \"Incorrect proof\""
                        }
                      ],
                      "id": 13790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2682:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:72:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13799,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:72:26"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2771:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13778,
                  "id": 13801,
                  "nodeType": "Return",
                  "src": "2764:11:26"
                }
              ]
            },
            "functionSelector": "ba70153c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkValidity",
            "nameLocation": "2496:13:26",
            "parameters": {
              "id": 13775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13771,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "2529:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13803,
                  "src": "2510:27:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13769,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2510:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13770,
                    "nodeType": "ArrayTypeName",
                    "src": "2510:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13774,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "2557:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13803,
                  "src": "2538:31:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13772,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2538:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 13773,
                    "nodeType": "ArrayTypeName",
                    "src": "2538:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2509:61:26"
            },
            "returnParameters": {
              "id": 13778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13777,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13803,
                  "src": "2592:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13776,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2591:6:26"
            },
            "scope": 13809,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13808,
            "nodeType": "VariableDeclaration",
            "src": "3041:25:26",
            "constant": false,
            "documentation": {
              "id": 13804,
              "nodeType": "StructuredDocumentation",
              "src": "2786:250:26",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "3061:5:26",
            "scope": 13809,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 13805,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3041:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 13807,
              "length": {
                "hexValue": "3439",
                "id": 13806,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3049:2:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "3041:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13617,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 282,
              "src": "736:13:26"
            },
            "id": 13618,
            "nodeType": "InheritanceSpecifier",
            "src": "736:13:26"
          },
          {
            "baseName": {
              "id": 13619,
              "name": "ERC721EnumerableUpgradeableOptimized",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12512,
              "src": "751:36:26"
            },
            "id": 13620,
            "nodeType": "InheritanceSpecifier",
            "src": "751:36:26"
          },
          {
            "baseName": {
              "id": 13621,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 131,
              "src": "789:18:26"
            },
            "id": 13622,
            "nodeType": "InheritanceSpecifier",
            "src": "789:18:26"
          },
          {
            "baseName": {
              "id": 13623,
              "name": "UUPSUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1625,
              "src": "809:15:26"
            },
            "id": 13624,
            "nodeType": "InheritanceSpecifier",
            "src": "809:15:26"
          }
        ],
        "canonicalName": "MyERC721UpgradeableOptimized",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13616,
          "nodeType": "StructuredDocumentation",
          "src": "375:320:26",
          "text": "@title Barn Raise BeaNFT - opimized for farmers\n @author Brean\n @notice Mints NFTs, where rarity is based on time bought and size\n @dev Based on Upgradable ERC721Enum with optimizations, uses merkle root to determine tokenIDs\n @dev 2 merkle trees are used to facilitate batch and partial mints for users"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13809,
          1625,
          1447,
          1092,
          131,
          12512,
          447,
          13591,
          474,
          416,
          1070,
          1082,
          800,
          282
        ],
        "name": "MyERC721UpgradeableOptimized",
        "nameLocation": "704:28:26",
        "scope": 13810,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 26
}